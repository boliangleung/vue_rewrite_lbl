{"version":3,"file":"vue.js","sources":["../../src/utils/index.js","../../src/observer/array.js","../../src/observer/watcher.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/index.js"],"sourcesContent":["export function isObject(data){\r\n\treturn typeof data ==='object'&&data!==null\r\n}\r\n// 判断是否被监听过 而且给key加上value值\r\nexport function def(data,key,value){\r\n\tObject.defineProperty(data,key,{\r\n\t\tenumerable:false,\r\n\t\tconfigurable:false,\r\n\t\tvalue\r\n\t})\r\n}\r\n// 相当于做了一层代理\r\nexport function proxy(vm,source,key){\r\n\t// 可以了解去 getthis.name的时候 回去触发 this._data.name的get.(一样会) 。 set也一样 也就会触发一开始我们的set 会通知watcher更新\r\n\tObject.defineProperty(vm,key,{\r\n\t\tenumrable:true,\r\n\t    configurable:true,\r\n\t    get(){\r\n\t    \treturn vm[source][key]\r\n\t    },\r\n\t    set(newVal){\r\n\t    \tvm[source][key]=newVal\r\n\t    }\r\n\t})\r\n}","// 需要重写一些会改变数组自身的方法 push shift pop unshift splice sort filter\r\n// 记得 不监控索引和不监控长度的\r\nlet oldArrayMethods = Array.prototype\r\nimport { def } from '../utils/index'\r\n// value._proto_ = arrayMethods\r\n// arrayMethods._proto_ = oldArrayMethods\r\n// 首先会找aarayMethods 如果不存在 会查找oldArrayMethods 所以这是原型链查找的问题重写的没有 会继续向上查找\r\nexport let arrayMethods = Object.create(oldArrayMethods)\r\nconst methods = ['push', 'shift', 'unshift', 'pop', 'splice', 'sort', 'filter']\r\nmethods.forEach(method => {\r\n  def(arrayMethods, method, function(...args) {\r\n    //console.log('用户调用了push方法') // 这相当 切片方程   相当于在原生的逻辑切了个片，然后把这个片塞到了新写的方法里面返回\r\n    const result = oldArrayMethods[method].apply(this, args) // 实际上是调用原生的数组方法\r\n    let ob = this.__ob__\r\n    // push unshift splice 添加的元素可能是一个新的元素\r\n    let inserted //用户输入的参数\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n      case 'splice': // 3个参数  第一个是删除的位置 第二个是 删除的数量  第三个 新增的属性\r\n        inserted = args.slice(2)\r\n      default:\r\n        break\r\n    }\r\n    // 因为监听方法 我们之前封装在了 observe 我们现在的this 是 value 所以我们想办法 把new Observer 放在value的一个属性 那么我们就可以调用observerArray了\r\n\r\n    if (inserted) ob.observerArray(inserted) // 将新增属性一直检测。\r\n    ob.dep.notify()\r\n    return result\r\n  })\r\n})\r\n","import Dep, { pushTarget, popTarget } from './dep'\r\n\r\nlet uid = 0\r\nclass Watcher {\r\n  constructor(vm, exprorFn, cb, options) {\r\n    // 传进来的对象\r\n    this.vm = vm\r\n    this.id = ++uid\r\n    // 在Vue中cb是更新视图的核心，调用diff并更新视图过程\r\n    this.cb = cb\r\n    // 收集Deps 用于移除监听\r\n    this.newDeps = []\r\n    this.getter = exprorFn //将内部传过来的的回调函数 放到getter属性上 执行回调函数\r\n\r\n    this.options = options\r\n\r\n    //设置Dep.target的值，依赖收集时watch 对象\r\n    this.value = this.get()\r\n  }\r\n  get() {\r\n    // 设置Dep.target值 用于依赖收集\r\n    pushTarget(this)\r\n    let value\r\n    try {\r\n      const vm = this.vm\r\n      value = this.getter.call(vm, vm)\r\n    } finally {\r\n      popTarget(this)\r\n    }\r\n    return value\r\n  }\r\n  //添加依赖\r\n  addDep(dep) {\r\n    //  这里简单处理，在VUE中 做了重复筛选，即依赖只收集一次，不重复收集依赖\r\n    this.newDeps.push(dep)\r\n    dep.addSub(this)\r\n  }\r\n  // 更新\r\n  update() {\r\n    if (this.lazy) {\r\n      this.dirty = true\r\n    } else if (this.sync) {\r\n      this.run()\r\n    } else {\r\n      queueWatcher(this)\r\n    }\r\n  }\r\n  run() {\r\n    //这里只做简单的console.log 处理，在Vue中会调用diff过程从而更新视图\r\n    console.log(`这里会去执行Vue的diff相关方法，进而更新数据`)\r\n  }\r\n}\r\n\r\nfunction queueWatcher() {\r\n  console.log(`异步wathcer`)\r\n}\r\nexport default Watcher\r\n","import Watcher from './watcher'\r\n\r\n// 依赖收集\r\nlet uid = 0\r\n// 删除数据\r\nfunction remove(array, item) {\r\n  let index = array.indexOf(item)\r\n  if (index > -1) {\r\n    return array.splice(index, 1)\r\n  }\r\n}\r\nclass Dep {\r\n  // static target: ?Watcher;\r\n  // id: number;\r\n  constructor() {\r\n    this.id = uid++\r\n    this.subs = []\r\n  }\r\n  // sub是watcher\r\n  addSub(sub) {\r\n    this.subs.push(sub)\r\n  }\r\n  removeSub(sub) {\r\n    remove(this.subs, sub)\r\n  }\r\n  // 依赖收集，有需要才添加订阅\r\n  depend() {\r\n    if (Dep.target) {\r\n      Dep.target.addDep(this) // watcher 里面的addDep方法\r\n    }\r\n  }\r\n  notify() {\r\n    const subs = this.subs.slice()\r\n    for (let i = 0, l = subs.length; i < l; i++) {\r\n      subs[i].update()\r\n    }\r\n  }\r\n}\r\n\r\n// The current target watcher being evaluated.\r\n// This is globally unique because only one watcher\r\n// can be evaluated at a time.\r\n\r\nDep.target = null\r\nconst targetStack = []\r\nexport function pushTarget(target) {\r\n  targetStack.push(target)\r\n  Dep.target = target\r\n}\r\n\r\nexport function popTarget() {\r\n  targetStack.pop()\r\n  Dep.target = targetStack[targetStack.length - 1]\r\n}\r\n\r\nexport default Dep\r\n","import { isObject, def } from '../utils/index'\r\nimport { arrayMethods } from './array.js'\r\nimport Dep from './dep'\r\n\r\n// ?为什么单独写类\r\n// 如果要delete 内部是使用 vm.$delete 原理是splice\r\n// 可以通过设置 __ob__ 判断它是不是一个已经监测过的类\r\nclass Observer {\r\n  constructor(value) {\r\n    // 仅仅初始化功能\r\n    // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法 性能并不是特别好\r\n    // vue3.0 使用了proxy 并不用递归地去解析 而且不用加set和get方法\r\n\r\n    // value.__ob__ =this  // 我给每一个监控过的对象都增加一个__ob__属性 可以描述这个对象已经被监控过了\r\n    // 如果像上面那样写 会死循环 因为下面会不断的遍历__ob__ 所以得设置成不可枚举的属性。\r\n    def(value, '__ob__', this)\r\n\r\n    // 需要对数组和对象分开监测 如果数组走walk 那么索引也会被监测 这并不是我们想要的。 console.log 可以看到\r\n    if (Array.isArray(value)) {\r\n      // 如果是数组的话 并不会对索引进行观测 因为会导致性能问题\r\n      // 前端是很少操作索引的 一般是 push pop ...7个方法\r\n      // 所以我们需要做一个函数劫持 重写原型的方法 当数组调用这几个方法的时候 通知更新\r\n      value['__proto__'] = arrayMethods\r\n      // 这种模式 装修者模式 或者代理模式  arrayMethods 可以去调原生的方法 中间的时候 可以通知更新\r\n      // 如果数组里面放的是对象 我们再监控\r\n      this.observerArray(value)\r\n    } else {\r\n      this.walk(value)\r\n    }\r\n    // 观测的话 就两种方式 1种是数组 一种是对象\r\n    // 如果是数组的话 我们还把原型的方法重写。 然后对数组里面的每一项进行监控。\r\n    // 把这些方法 重新定义到了我们自己封装的方法。\r\n    // 如果是对象的话 就对对象的属性通过Object.defineProperty进行重新定义。\r\n  }\r\n  walk(data) {\r\n    let keys = Object.keys(data) //[name,detail]\r\n    for (let i = 0; i < keys.length; i++) {\r\n      let key = keys[i]\r\n      let value = data[key]\r\n      defineReactive(data, key, value) // Vue 核心响应式方法\r\n    }\r\n  }\r\n  observerArray(data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      observe(data[i])\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n  const dep = new Dep()\r\n  Object.defineProperty(data, key, {\r\n    enumrable: true,\r\n    configurable: true,\r\n    get() {\r\n      if (Dep.target) {\r\n        dep.depend()\r\n        // if (childObj) {\r\n        //   childObj.dep.depend()\r\n        //   if(Array.isArray(value)){\r\n        //     console.log(dependArray)\r\n        //   }\r\n        // }\r\n        console.log('啵啵啵不', value, dep.id)\r\n      }\r\n      return value\r\n    },\r\n    set(newVal) {\r\n      if (newVal === value || (newVal !== newVal && value !== value)) return\r\n      observe(newVal) // 继续劫持用户设置的值，因为有可能设置的值是一个对象\r\n      dep.notify()\r\n      value = newVal // 利用闭包的特性\r\n    }\r\n  })\r\n}\r\n\r\n// 把data中的数据 都使用Object.defineProperty重新定义\r\n// 不能兼容IE8以下\r\nexport function observe(data) {\r\n  if (!isObject(data)) {\r\n    return\r\n  }\r\n  return new Observer(data) //用来观察数组\r\n}\r\n","import {observe} from \"./observer/index\"\r\nimport {proxy} from \"./utils/index\"\r\nexport function initState(vm){\r\n\tconst opts = vm.$options\r\n\t// 初始化Vue的数据来源 props methods data computed watch 顺序 Vue 源码也是这样的顺序\r\n\tif(opts.props){\r\n\t\tinitProps(vm)\r\n\t}\r\n\tif(opts.methods){\r\n\t\tinitMethod(vm)\r\n\t}\r\n\tif(opts.data){\r\n\t\tinitData(vm)\r\n\t}\r\n\tif(opts.computed){\r\n\t\tinitComputed(vm)\r\n\t}\r\n\tif(opts.watch){\r\n\t\tinitWatch(vm)\r\n\t}\r\n}\r\nfunction initProps(vm){\r\n\r\n}\r\nfunction initMethod(vm){\r\n\r\n}\r\nfunction initData(vm){\r\n\tlet data = vm.$options.data // 用户传的data\r\n\tdata = vm._data = typeof data ==='function'?data.call(vm):data  //处理data\r\n\t// 对象劫持 用户改变了数据 我们希望可以得到通知 => 刷新\r\n\t// MVVM模式 数据变化驱动视图变化\r\n\t// Object.defineProperty()给属性添加get方法和set方法\r\n\r\n\t// 为了让用户更好的使用 用户可以使用this.xx 使用代理\r\n\tfor(let key in data){\r\n\t\tproxy(vm,'_data',key)\r\n\t}\r\n\tobserve(data);\r\n}\r\nfunction initComputed(vm){\r\n\r\n}\r\nfunction initWatch(vm){\r\n\r\n}\r\n","﻿// ast语法树 是用对象来描述原生语法的  虚拟DOM 用对象来描述DOM节点的\r\n\r\n// ?:匹配不捕获\r\n// arguments[0] 匹配到的标签 arguments[1] 匹配到的标签名字\r\n\r\n// 这个也是参考JQ之父写的一个项目源码\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` // abc-aa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 标签开头的正则 捕获的内容是 标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配标签结尾的 </div>\r\n// ID=\"abc\"(3)  'abc'(4) 'ab'(5) //可能捕获到的结果\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+| ([^\\s\"'=<>`]+)))?/ // 匹配属性的\r\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的 >\r\nconst defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g // 匹配{{}}\r\n\r\nlet root = null // 树根\r\nlet currentParent //保存当前父亲 渲染div 父亲就是空 渲染P 父亲是div  标识当前父亲是谁\r\nlet stack = []\r\n// 类型\r\nconst ELEMENT_TYPE = 1\r\nconst TEXT_TYPE = 3\r\n// <div><p>//要知道父子关系\r\n// [div,p,span,] 语法是否正确 使用栈的原理 进行匹配\r\n\r\nfunction createASTElement(tagName, attrs) {\r\n  return {\r\n    tag: tagName,\r\n    attrs,\r\n    type: ELEMENT_TYPE,\r\n    children: [],\r\n    parent: null\r\n  }\r\n}\r\n\r\nfunction start(tagName, attrs) {\r\n  // console.log(\"开始标签是：\",tagName,\"属性是:\",attrs)\r\n\r\n  // 遇到开始标签 创建一个ast元素\r\n  let element = createASTElement(tagName, attrs)\r\n  if (!root) {\r\n    //因为只有一个DOM结点\r\n    root = element\r\n  }\r\n  currentParent = element // 把当前元素标记成父ast树\r\n  stack.push(element) // 将开始标签放到栈中 是放element 不是标签名\r\n}\r\n\r\nfunction chars(text) {\r\n  // 去掉空字符串\r\n  text = text.replace(/\\s/g, '')\r\n  if (text) {\r\n    currentParent.children.push({\r\n      text,\r\n      type: TEXT_TYPE\r\n    })\r\n  }\r\n  // console.log('文本是:',text)\r\n}\r\nfunction end(tagName) {\r\n  // <div><p>//要知道父子关系\r\n  // console.log(tagName)\r\n  let element = stack.pop()\r\n  // 标识当前这个P是属于这个div的儿子的\r\n  currentParent = stack[stack.length - 1]\r\n  // 如果存在 因为最后一个标签的话 可能呢是空的\r\n  // 如果存在 那么该元素的父亲就是currentParent\r\n  // 父亲的子节点就是这个element\r\n  // 特殊标签 暂时不做考虑 比如a标签\r\n  if (currentParent) {\r\n    // 实现了一个树的父子关系\r\n    element.parent = currentParent\r\n    currentParent.children.push(element)\r\n  }\r\n  // 只能在关闭的时候 才可以确认父子关系 一开始是不可以的\r\n  // 比如 div p span\r\n}\r\n\r\n// 核心规则 就是不停地去拿这些正则去匹配当前的字符串 每匹配到一段字符串 我们就截取字符串\r\n// 正则匹配 加循环 解析成AST语法树\r\nfunction parseHTML(html) {\r\n  // 不停地去解析\r\n  while (html) {\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd == 0) {\r\n      // 如果当前索引为0 肯定是一个标签 开始标签或者结束标签\r\n      let startTagMatch = parseStartTag() // 通过这个方法获取到匹配的结果 tagName,attrs\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs) // 1.得到开始标签和结果是就要开始解析标签\r\n        continue\r\n        // 如果开始标签匹配完之后 继续下一次匹配\r\n      }\r\n      let endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1]) // 2. 解析结束标签\r\n        continue\r\n      }\r\n    }\r\n    let text\r\n    // 去掉div之后 下一行 一开始可能是空字符串 或者字符串 我们需要截取做处理\r\n    if (textEnd >= 0) {\r\n      text = html.substring(0, textEnd)\r\n    }\r\n    // 前进文本的位置\r\n    if (text) {\r\n      advance(text.length)\r\n      chars(text) // 3.解析文本\r\n    }\r\n  }\r\n  // 前进多少位 也就是截取\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n  function parseStartTag() {\r\n    let start = html.match(startTagOpen)\r\n    // console.log(start)\r\n    // [\"<div\", \"div\", index: 0, xx]\r\n    // 所以我们需要截取第一个<div\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      advance(start[0].length) // 将匹配到的标签从HTML删除\r\n      let end, attr\r\n      // 判断能否匹配到结束标签 匹配结束标签之前的数据 就是属性\r\n      // 没有匹配到结束标签 且 attr匹配到了属性 就把这个属性添加到match 并在html删除该字符串\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        // 将属性进行解析\r\n        advance(attr[0].length)\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5]\r\n        }) // 第二个是 = 第三个是值 双引号 第四个单引号 第五个是没有符号\r\n      }\r\n      if (end) {\r\n        //去掉开始标签\r\n        advance(end[0].length)\r\n      }\r\n      return match\r\n    }\r\n  }\r\n  // 最终会生成一个AST树\r\n  return root\r\n}\r\n//处理attrs 生成我们想要的字符串\r\nfunction genProps(attrs) {\r\n  console.log(attrs)\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if (attr.name === 'style') {\r\n      // style=\"color:red;\"=>style:{color:red,} => 最后再加{}\r\n      let obj = {}\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value\r\n      })\r\n      // 重写style value的值\r\n      attr.value = obj\r\n    }\r\n    // JSON.stringify 用来解析{color:red 要不然解析不了}\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}` //最后一个逗号不要\r\n}\r\nfunction genChildren(el) {\r\n  let children = el.children\r\n  if (children.length > 0) {\r\n    return `${children.map(c => gen(c)).join(',')}`\r\n  } else {\r\n    return false\r\n  }\r\n}\r\nfunction generate(el) {\r\n  let children = genChildren(el)\r\n  let code = ``\r\n  return `_c(\"${el.tag}\",${\r\n    el.attrs.length > 0 ? genProps(el.attrs) : 'undefined'\r\n  }${children ? `,${children}` : ''})`\r\n}\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    //元素标签\r\n    return generate(node)\r\n  } else {\r\n    let text = node.text //a  {{name}}  b {{age}}  c\r\n    let tokens = []\r\n    let match, index\r\n    // 每次的偏移量\r\n    let lastIndex = (defaultTagRE.lastIndex = 0) // 正则的坑 当他匹配一次之后 lastIndex的索引问题\r\n    // 只要是全局匹配 就需要将lastIndex每次匹配的lastIndex调到0处。\r\n    // /abc/.test('a') 第二次的话 就是false 所以需要重置\r\n    while ((match = defaultTagRE.exec(text))) {\r\n      index = match.index\r\n      if (index > lastIndex) {\r\n        //比较匹配到的值上次的值\r\n        tokens.push(JSON.stringify(text.slice(lastIndex, index))) // 相当于截取a  这段\r\n      }\r\n      tokens.push(`_s(${match[1].trim()})`) //{{name}}\r\n      lastIndex = index + match[0].length //记录用\r\n    }\r\n    if (lastIndex < text.length) {\r\n      tokens.push(JSON.stringify(text.slice(lastIndex))) // 最后一次 c 没有匹配到\r\n    }\r\n\r\n    return `_v(${tokens.join('+')})`\r\n  }\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n  // 1. 解析HTML成AST语法树\r\n  let root = parseHTML(template)\r\n\r\n  // 2. 需要将ast语法树生成最终的render函数  核心逻辑 字符串拼接\r\n\r\n  let code = generate(root)\r\n  // <div id=\"app\">\r\n  // <p>{{name}}</p>\r\n  // <span>{{age}}</span>\r\n  // </div>\r\n  // _c 创建结点 _s 创建字符串(原理是JSON.stringify) _v 创建文本\r\n  // 最终结果 将ast树 再次转化成JS语法。\r\n  // 开发时候 我们并不会去使用这样的一个模板 因为这样 很浪费性能。\r\n  // render return _c('div',{id:app},_c('p',undefined,_v(_s(name))),_c('span',undefined,_v(_s(age))))\r\n\r\n  // 3. 生成函数 所有模板的引擎实现 都需要new Function + with\r\n  // with(this._data){\r\n  // \t//这里的变量 可以取this._data这个作用域下的值。\r\n  // \tconsole.log(name)\r\n  // }\r\n  code = `with(this){return ${code}}`\r\n  let renderFn = new Function(code)\r\n  // vm._render 就是这样的实现\r\n\r\n  // Vue的_render 是返回虚拟DOM的\r\n  return renderFn\r\n  // console.log(root)\r\n  // console.log(renderFn)\r\n}\r\n\r\n/**\r\nnodeType =1 文档元素 nodeType = 3文本类型\r\n\r\n分析 start div attrs:[{name:\"id\",\"value:\"app\"}]\r\n\tstart  p\r\n\ttext {{name}}\r\n\tend   p\r\n\tstart span\r\n\ttext {{age}}\r\n\tend  span\r\n\tend div\r\n这个过程 就是截取字符串 抽出来当成ast语法树\r\n\t <div id=\"app\">\r\n\t\t<p>{{name}}</p>\r\n\t\t<span>{{age}}</span>\t\r\n\t </div>\r\n\r\n\r\n\t转成AST语法树\r\nlet root =｛\r\n\ttag:'div',\r\n\tattrs:[{name:id,value:\"app\"}],\r\n\tparent:null,\r\n\ttype:1,\r\n\tchildren:[{\r\n\t\ttag:'p',\r\n\t\tattrs:[],\r\n\t\tparent:root,\r\n\t\ttype:1,\r\n\t\tchildren:[{\r\n\t\t\ttext:\"{{name}}\",\r\n\t\t\ttype:3\r\n\t\t}]\r\n\t}]\r\n ｝\r\n\r\n 不能有多个根节点 因为要做diff操作，diff操作是从树根开始 你不可能有两个树根。\r\n\r\n 使用 const compiler = require(Vue-template-compiler) 包\r\n\r\n let r = compiler.compiler(\"<div></div>\")\r\n**/\r\n","export function patch(oldVode,vnode){\r\n\tconsole.log(oldVode,vnode)\r\n\t//vnode 和ast抽象树很像 但是真实的情况下 我们还有v-model v-for 事件等等等情况 ast抽象树并不能生成真实的代码\r\n\r\n\t// 1. 判断是更新还是渲染\r\n\tconst isRealElement=oldVode.nodeType;\r\n\tif(isRealElement){\r\n\t\tconst oldElm = oldVode // div id=app\r\n\t\tconst parentElm = oldElm.parentNode; //body 要把虚拟节点放到\r\n\r\n\t\tlet el=createElm(vnode)\r\n\t\tparentElm.insertBefore(el,oldElm.nextSibling) //插入在老元素的ID之后 紧随那种 不能用append 要不然会在最后\r\n\t\tparentElm.removeChild(oldElm) // 删除老结点\r\n\t\treturn el;\r\n\t}\r\n\r\n\t// 递归创建真实结点 替换掉老的结点。\r\n}\r\nfunction createElm(vnode){\r\n\tlet {tag,data,key,children,text}=vnode\r\n\t//是标签 就创建标签\r\n\tif(typeof tag==='string'){\r\n\t\tvnode.el=document.createElement(tag);\r\n\t\tupdateProperties(vnode);\r\n\t\tchildren.forEach(child=>{ //递归创建儿子节点，将儿子节点扔到父节点上。\r\n\t\t\treturn vnode.el.appendChild(createElm(child))\r\n\t\t})\r\n\t}else{\r\n\t\t//虚拟DOM上映射着真实DOM 方便后续更新操作\r\n\t\tvnode.el=document.createTextNode(text)\r\n\t}\r\n\treturn vnode.el // 记得是有返回值的\r\n\t// 如果不是标签 就是文本\r\n}\t\r\n// 更新属性的值\r\nfunction updateProperties(vnode){\r\n\tlet newProps = vnode.data ||{}\r\n\tlet el = vnode.el\r\n\r\n\tfor(let key in newProps){\r\n\t\tif(key==='style'){\r\n\t\t\tfor(let styleName in newProps.style){\r\n\t\t\t\tel.style[styleName]=newProps.style[styleName]\r\n\t\t\t}\r\n\t\t}else if(key==='class'){\r\n\t\t\tel.className =newProps.class\r\n\t\t}else{\r\n\t\t\tel.setAttribute(key,newProps[key])\r\n\t\t}\r\n\t}\r\n}","import Watcher from './observer/watcher'\r\nimport { patch } from './vdom/patch'\r\nexport function lifecyleMixin(Vue) {\r\n  Vue.prototype._update = function(vnode) {\r\n    const vm = this\r\n    // 通过虚拟节点 渲染出真实的DOM\r\n    // console.log(vnode)\r\n    vm.$el = patch(vm.$el, vnode) //需要用虚拟节点创建出真实结点 替换掉真实的$el\r\n    // patch 也是更新的 判断diff的一部分\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  const options = vm.$options //render\r\n  vm.$el = el //真实的元素\r\n\r\n  // watcher 就是用来渲染的\r\n  // vm._render 通过解析render方法 渲染出虚拟DOM\r\n  // vm._update 通过虚拟DOM 创建珍惜结点\r\n\r\n  // 渲染页面\r\n  let updateComponent = () => {\r\n    //无论渲染还是更新 都会调用此方法\r\n    // 返回的是虚拟DOM_render\r\n    vm._update(vm._render())\r\n  }\r\n  debugger\r\n  // 渲染watcher 每一个组件都有一个watcher  渲染watcher 不需要通知谁 所以第三个是一个空函数\r\n  new Watcher(vm, updateComponent, () => {}, true) //true标识他是一个渲染watcher\r\n  // 一个组件只有一个渲染watcher\r\n}\r\n","\r\nimport {initState} from \"./state\"\r\nimport {compileToFunction} from \"./compiler/index\"\r\nimport {mountComponent} from \"./lifecycle\"\r\n\r\nexport  function initMixin(Vue){\r\n\t// 在原型上添加一个init方法  初始化流程\r\n\tVue.prototype._init = function(options){\r\n\t\t// 做数据的劫持\r\n\t\tconst vm=this\r\n\t\tvm.$options = options // this.$options就是用户传的属性\r\n\r\n\t\t// 初始化状态\r\n\t\tinitState(vm) // 分割代码\r\n\r\n\r\n\t\t// 如果页面传入el属性 需要将页面渲染出来。\r\n\t\t// 如果页面传入了el 我们就要实现挂载\r\n\t\t// 编译过程\r\n\t\tif(vm.$options.el){\r\n\t\t\tvm.$mount(vm.$options.el)\r\n\t\t}\r\n\t}\r\n\r\n\tVue.prototype.$mount=function(el){\r\n\t\tconst vm = this;\r\n\t\tconst options = vm.$options\r\n\t\tel = document.querySelector(el)\r\n\t\t// 默认先会查找有没有render方法，没有render 会采用tempalate template也没有 就用el中的内容\r\n\t\tif(!options.render){\r\n\t\t\t// 对模板进行编译\r\n\t\t\tlet template = options.template; // 取出模板\r\n\t\t\tif(!template&&el){\r\n\t\t\t\ttemplate = el.outerHTML\r\n\t\t\t}\r\n\t\t\t// console.log(template)\r\n\t\t\tconst render = compileToFunction(template)\r\n\r\n\t\t\toptions.render = render\r\n\t\t\t// 我们需要将template 转化成render方法 vue1.0 2.0 虚拟DOM 就可以用DOM DIFF的操作\r\n\t\t\t// <div id=\"app\">\r\n\t\t\t// <p>{{name}}</p>\r\n\t\t\t// <span>{{age}}</span>\t\r\n\t\t\t// </div>\r\n\t\t\t// _c 创建结点 _s 创建字符串(原理是JSON.stringify) _v 创建文本\r\n\t\t\t// render return _c('div',{id:app},_c('p',undefined,_v(_s(name))),_c('span',undefined,_v(_s(age))))\r\n\t\t\t// eval 不安全 因为 \r\n\t\t\t// let a=1;\r\n\t\t\t// eval(`console.log(a)`) 它会往上级作用域找 不干净 函数作用域是不会的。 \r\n\t\t}\r\n\t\t// 最终都是要得到 options.render\r\n\t\t// 渲染当前的组件 挂载这个组件\r\n\t\tmountComponent(vm,el) // vm上的render 执行后的结果 替换el就可以了。\r\n\t}\r\n}","export function createElement(tag,data={},...children){\r\n\tlet key=data.key\r\n\tif(key){\r\n\t\tdelete data.key;\r\n\t}\r\n\treturn vnode(tag,data,key,children,undefined)\r\n\t// console.log(tag,data,children)\r\n\t\r\n}\r\nexport function createTextNode(text){\r\n\treturn vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n\r\n// 虚拟DOM节点 就是通过_c -v 实现用对象来描述DOM节点的结构 （实际还是对象）\r\n\r\nfunction vnode(tag,data,key,children,text){\r\n\treturn {\r\n\t\ttag,\r\n\t\tdata,\r\n\t\tkey,\r\n\t\tchildren,\r\n\t\ttext\r\n\t}\r\n}\r\n// 当然vnode 我们以后也是可以扩展的 比如componentOptions等等\r\n\r\n// 1. 将template转化成ast语法书--》生成render方法--》生成虚拟DOM---》真实DOM\r\n// 更新过程  重新生成虚拟DOM -》 diff->更新DOM\r\n\r\n// 第一次生成了ast ->render 函数。 更新的时候 我们直接获取render函数 进行值的更新 就可以生成vnode 然后和之前的做比较\r\n\r\n// 就比如components的vnode 就还有componentOptions和element这个结点。其实都是大同小异。","import {createElement,createTextNode} from \"./vdom/create-element\"\r\n\r\n\r\nexport function renderMixin(Vue){\r\n\t// _c 创建元素的虚拟节点\r\n\t// _v 创建文本的虚拟节点\r\n\t// _s JSON.stringify\r\n\t// 里面的_c =》this._c\r\n\tVue.prototype._c=function(){\r\n\t\treturn createElement(...arguments);//tag,data,children1,children2\r\n\t}\r\n\tVue.prototype._v=function(text){\r\n\t\treturn createTextNode(text)\r\n\t}\r\n\tVue.prototype._s=function(val){\r\n\t\treturn val==null?'':(typeof val==='object'?JSON.stringify(val):val);\r\n\t}\r\n\tVue.prototype._render=function(){\r\n\t\tconst vm=this\r\n\r\n\t\tconst {render} = vm.$options\r\n\r\n\t\tlet vnode =  render.call(vm);// 去实例上取值 \r\n\t\treturn vnode\r\n\t}\r\n}","\r\n/**\r\n *@title Vue rewrite\r\n *\r\n**/\r\n// 这个文件只是整合的功能\r\nimport {initMixin} from \"./init\"\r\nimport {renderMixin} from \"./render\"\r\nimport {lifecyleMixin} from \"./lifecycle\"\r\n\r\nfunction Vue(options){\r\n\t// 必须new 实例化\r\n\tif(!this instanceof Vue){\r\n\t\tnew Error(\"Vue should be instantiated use 'vew' \")\r\n\t\treturn\r\n\t}\r\n\t// 进行Vue的初始化工作\r\n\tthis._init(options)\r\n}\r\n// 通过引入文件的方式 给Vue原型上添加方法\r\ninitMixin(Vue)\r\nrenderMixin(Vue)\r\nlifecyleMixin(Vue)\r\n\r\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","enumrable","get","set","newVal","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","args","result","apply","ob","__ob__","inserted","slice","observerArray","dep","notify","uid","Watcher","exprorFn","cb","options","id","newDeps","getter","pushTarget","call","popTarget","push","addSub","lazy","dirty","sync","run","queueWatcher","console","log","remove","array","item","index","indexOf","splice","Dep","subs","sub","target","addDep","i","l","length","update","targetStack","pop","Observer","isArray","walk","keys","defineReactive","observe","depend","initState","opts","$options","props","initData","computed","watch","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","chars","text","replace","end","parseHTML","html","textEnd","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","genProps","str","obj","split","JSON","stringify","genChildren","el","map","c","gen","join","generate","node","tokens","lastIndex","exec","trim","compileToFunction","template","code","renderFn","Function","patch","oldVode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","child","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecyleMixin","Vue","_update","$el","mountComponent","updateComponent","_render","initMixin","_init","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","arguments","_v","_s","val"],"mappings":"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"}